{"version":3,"file":"static/js/224.c4b87dba.chunk.js","mappings":"0QACA,EAAuB,oBAAvB,EAAmD,qB,SC0DnD,EAlDc,WACZ,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,kHAESC,EAAAA,EAAAA,IAAaJ,GAFtB,gBAENK,EAFM,EAENA,KACRR,EAAaQ,GAHC,gDAILC,EAJK,KAILA,SACTP,GAAS,GACTQ,QAAQC,IAAIF,EAASG,KAAKC,SANZ,yDAAH,qDASfP,EAAUH,EACX,GAAE,CAACA,KAGF,gCACGF,IAAS,SAACa,EAAA,QAAD,IACTf,EAAUgB,QACT,eAAIC,UAAWC,EAAf,SACGlB,EAAUmB,MAAM,EAAG,IAAIC,KAAI,SAAAC,GAAK,OAC/B,gBAAwBJ,UAAWC,EAAnC,WACE,gBACEI,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,kCAIFC,IAAG,UAAKH,EAAMI,SAEhB,4BACE,uBAAIJ,EAAMI,QACV,uCAEE,0BAAOJ,EAAMK,oBAbVL,EAAMM,QADgB,OAqBnC,wCAIP,C,2CCrDD,UAJqB,WACnB,OAAO,wCACR,C,yLCAKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,WAAMC,GAAN,+EACT,QACC,OAFQ,SAGJN,EAASO,IAAT,oBAFL,QAEK,YADJ,OACI,iBACwBD,IAJpB,uBAGnBrB,EAHmB,EAGnBA,KAHmB,kBAMpBA,GANoB,2CAAH,sDASbuB,EAAW,mCAAG,WAAOF,EAAMG,GAAb,yFACFT,EAASO,IAAT,6BACCD,EADD,kBACeG,IAFb,uBACjBxB,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,wDAaXyB,EAAc,mCAAG,WAAMC,GAAN,yFACLX,EAASO,IAAT,iBAAuBI,IADlB,uBACpB1B,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdL,EAAY,mCAAG,WAAMJ,GAAN,yFACHwB,EAASO,IAAT,iBAAuB/B,EAAvB,aADG,uBAClBS,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ2B,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASO,IAAT,iBAAuBI,EAAvB,aADG,uBAClB1B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Casts/casts.module.css?bd3b","components/Casts/Casts.jsx","pages/NotFoundPage/NotFoundPage.jsx","shared/services/FetchMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"casts_list__L4LgO\",\"items\":\"casts_items__AOCKO\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport NotFoundPage from 'pages/NotFoundPage/NotFoundPage';\n\nimport { fetchCredits } from 'shared/services/FetchMoviesApi';\n\nimport styles from './casts.module.css';\n\nconst Casts = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchCredits(movieId);\n        setMovieCast(cast);\n      } catch ({ response }) {\n        setError(true);\n        console.log(response.data.message);\n      }\n    };\n    fetchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <NotFoundPage />}\n      {movieCast.length ? (\n        <ul className={styles.list}>\n          {movieCast.slice(0, 12).map(actor => (\n            <li key={actor.cast_id} className={styles.items}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                    : `https://via.placeholder.com/200`\n                }\n                alt={`${actor.name}`}\n              />\n              <div>\n                <p>{actor.name}</p>\n                <p>\n                  Character:\n                  <span>{actor.character}</span>\n                </p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No results</p>\n      )}\n    </>\n  );\n};\n\nexport default Casts;\n","const NotFoundPage = () => {\n  return <h1>NotFoundPage</h1>;\n};\n\nexport default NotFoundPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '8c2d35d0c441850846a9f314ac71f075',\n  },\n});\n\nexport const fetchTrending = async page => {\n  const mediaType = 'movie';\n  const timeWindow = 'week';\n  const { data } = await instance.get(\n    `/trending/${mediaType}/${timeWindow}?page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovies = async (page, query) => {\n  const { data } = await instance.get(\n    `/search/movie?page=${page}&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchGenres = async () => {\n  const { data } = await instance.get(`/genre/movie/list`);\n  console.log('genres', data.genres);\n  return data.genres;\n};\n\nexport const fetchMovieById = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}`);\n  return data;\n};\n\nexport const fetchCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchReviews = async movieID => {\n  const { data } = await instance.get(`/movie/${movieID}/reviews`);\n  return data;\n};\n\n/*&query=${query}*/\n"],"names":["useState","movieCast","setMovieCast","error","setError","movieId","useParams","useEffect","fetchCast","fetchCredits","cast","response","console","log","data","message","NotFoundPage","length","className","styles","slice","map","actor","src","profile_path","alt","name","character","cast_id","instance","axios","baseURL","params","api_key","fetchTrending","page","get","fetchMovies","query","fetchMovieById","movieID","fetchReviews"],"sourceRoot":""}